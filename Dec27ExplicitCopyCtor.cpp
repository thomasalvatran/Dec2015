//home/tovantran/Ctest/Dec27ExplicitCopyCtor.cpp --> 2015-12-28 by ./.tv  owner: tovantran

//Shallow copy 
//http://en.wikipedia.org/wiki/Copy_constructor
#include <iostream>
using namespace std;

class Array {
	public:
		int size;
		int* data;
//		implicit Array(int sz)
      Array(int sz)
			: size(sz), data(new int[size])
		{}
		~Array()
		{
			delete[] this->data;
			cout << "Dtor" << endl;
		}
   Array(const Array &other): size(other.size), data(new int[other.size]) //deep copy
   {
    copy(other.data, other.data + other.size, data);
   }
   //Array(const Array& other) : size(other.size), data(other.data) {} //shallow copy generated by compiler if not defined 
};
int main()
{
	Array first(20);
	first.data[0] = 25;
	{
		Array copy = first;
		std::cout << first.data[0] << " " << copy.data[0] << std::endl;
	} // (1)
	first.data[0] = 10; // (2)
}

